plugins {
    id 'java'
    id 'org.springframework.boot' version '2.2.6.RELEASE'
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
    id 'org.hidetake.ssh' version '2.9.0'
    id 'com.ewerk.gradle.plugins.querydsl' version '1.0.10'
    id "org.asciidoctor.convert" version "1.5.9.2"
}

repositories {
    mavenCentral()
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'org.asciidoctor.convert'
    apply plugin: 'org.hidetake.ssh'

    group = 'lozm'
    version = '0.1'

    sourceCompatibility = 1.8

    configurations {
        developmentOnly
        runtimeClasspath {
            extendsFrom developmentOnly
        }
        compileOnly {
            extendsFrom annotationProcessor
        }
    }

    repositories {
        mavenCentral()
    }

    dependencies {
        implementation('org.springframework.boot:spring-boot-starter-data-jpa')
        implementation 'org.projectlombok:lombok'
        annotationProcessor 'org.projectlombok:lombok'

        testImplementation('org.springframework.boot:spring-boot-starter-test') {
            exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
        }
    }

    // QueryDSL -- start
    apply plugin: "com.ewerk.gradle.plugins.querydsl"
//    def querydslSrcDir = 'src/main/generated'
//
//    querydsl {
//        library = "com.querydsl:querydsl-apt"
//        jpa = true
//        querydslSourcesDir = querydslSrcDir
//    }
//
//    sourceSets {
//        main {
//            java {
//                srcDirs = ['src/main/java', querydslSrcDir]
//            }
//        }
//    }
    def querydslDir = "$buildDir/generated/querydsl"
//    def querydslDir = "src/main/generated"

    querydsl {
        library = "com.querydsl:querydsl-apt" //??
        jpa = true
        querydslSourcesDir = querydslDir
    }

    sourceSets {
        main.java.srcDir querydslDir
    }

    compileQuerydsl{
        options.annotationProcessorPath = configurations.querydsl
    }

    configurations {
        querydsl.extendsFrom compileClasspath
    }
// QueryDSL -- end
}